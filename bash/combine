#!/bin/bash

#################################################
# Sylvain Watelet - 17/11/2016 ##################
# swatelet@ulg.ac.be ############################
#################################################
#################################################

datapath="/data/emodnet-combined-tmp"

#var="Water_body_ammonium"
#varcapital="WATER_BODY_AMMONIUM"

var_old="Water_body_chlorophyll-a"
var_old_black="Water\ body\ chlorophyll-a"
var="Water_body_chlorophyll_a"
varcapital_old="WATER_BODY_CHLOROPHYLL-A"
varcapital="WATER_BODY_CHLOROPHYLL_A"

#var_old="Water body dissolved oxygen concentration"
#var="Water_body_dissolved_oxygen_concentration"
#varcapital="WATER_BODY_DISSOLVED_OXYGEN_CONCENTRATION"

#var="Water_body_phosphate"
#varcapital="WATER_BODY_PHOSPHATE"

#var="Water_body_silicate"
#varcapital="WATER_BODY_SILICATE"

#season='autumn'
#season_cineca1='Autumn\ \(October-December\)'
#season_cineca2='Autumn\ \(September-November\)'
#season_cineca1='Autumn (October-December)'
#season_cineca2='Autumn (September-November)'

#season="winter"
#season_cineca1='Winter\ \(January-March\)'
#season_cineca2='Winter\ \(December-February\)'
#season_cineca1='Winter (January-March)'
#season_cineca2='Winter (December-February)'                      

#season="spring"
#season_cineca1='Spring\ \(April-June\)'
#season_cineca2='Spring\ \(March-May\)'
#season_cineca1='Spring (April-June)'
#season_cineca2='Spring (March-May)' 

season="summer"
#season_cineca1='Summer\ \(July-September\)'
#season_cineca2='Summer\ \(June-August\)'
season_cineca1='Summer (July-September)'
season_cineca2='Summer (June-August)'

if [ "$season" == "winter" ]
then
j=1
elif [ "$season" == "spring" ]
then
j=2
elif [ "$season" == "summer" ]
then
j=3
elif [ "$season" == "autumn" ]
then
j=4
fi

mkdir -p 'combined'

for i in `seq 1 5` #5
do

if [ $i == "1" ] 
then
region="atlantic"
#rm -f $region/$season/*
#mkdir -p $region/$season                                                                                                                          
mkdir -p $datapath/$region/$season
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var'.4Danl.nc" $region/$season
#cp "/data/emodnet-domains/Atlantic Sea/$season_cineca1 - 10-years running averages/$var.4Danl.nc" $datapath/$region/$season 

### for chlorophyll-a ###
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var_old'.4Danl.nc" $region/$season
cp "/data/emodnet-domains/Atlantic Sea/$season_cineca1 - 10-years running averages/$var_old.4Danl.nc" $datapath/$region/$season 
cp $datapath/$region/$season/$var_old.4Danl.nc $datapath/$region/$season/$var.4Danl.nc
ncrename -v $var_old,$var $datapath/$region/$season/$var.4Danl.nc
ncrename -v ${var_old}_L2,${var}_L2 $datapath/$region/$season/$var.4Danl.nc

fi

if [ $i == "2" ]
then 
region="north"
#rm -f $region/$season/*
#mkdir -p $region/$season
mkdir -p /data/emodnet-combined-tmp/$region/$season
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/North\ Sea/''$season_cineca2''\ \-\ 10-years\ running\ averages/'$var'.4Danl.nc" $region/$season
#cp "/data/emodnet-domains/North Sea/$season_cineca2 - 10-years running averages/$var.4Danl.nc" /data/emodnet-combined-tmp/$region/$season

### for chlorophyll-a ###
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var_old'.4Danl.nc" $region/$season
cp "/data/emodnet-domains/North Sea/$season_cineca2 - 10-years running averages/$var_old.4Danl.nc" /data/emodnet-combined-tmp/$region/$season
cp $datapath/$region/$season/$var_old.4Danl.nc $datapath/$region/$season/$var.4Danl.nc
ncrename -v $var_old,$var $datapath/$region/$season/$var.4Danl.nc
ncrename -v ${var_old}_L2,${var}_L2 $datapath/$region/$season/$var.4Danl.nc

fi

if [ $i == "3" ] 
then 
region="baltic" 
rm -f $region/$season/*
#mkdir -p $region/$season
mkdir -p $datapath/$region/$season
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Baltic\ Sea/''$season_cineca2''\ \-\ 10-years\ running\ averages/'$var'.4Danl.nc" $region/$season
#cp "/data/emodnet-domains/Baltic Sea/$season_cineca2 - 10-years running averages/$var.4Danl.nc" $datapath/$region/$season

### for chlorophyll-a ###
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var_old'.4Danl.nc" $region/$season
cp "/data/emodnet-domains/Baltic Sea/$season_cineca2 - 10-years running averages/$var_old.4Danl.nc" $datapath/$region/$season    
cp $datapath/$region/$season/$var_old.4Danl.nc $datapath/$region/$season/$var.4Danl.nc
ncrename -v $var_old,$var $datapath/$region/$season/$var.4Danl.nc
ncrename -v ${var_old}_L2,${var}_L2 $datapath/$region/$season/$var.4Danl.nc

fi

if [ $i == "4" ] 
then 
region="black"
rm -f $region/$season/*
#mkdir -p $region/$season
mkdir -p $datapath/$region/$season
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Black\ Sea/''$season_cineca2''\ \-\ 10-years\ running\ averages/'$var'.4Danl.nc" $region/$season
#cp "/data/emodnet-domains/Black Sea/$season_cineca2 - 10-years running averages/$var.4Danl.nc" $datapath/$region/$season

### for chlorophyll-a ###
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var_old'.4Danl.nc" $region/$season
cp "/data/emodnet-domains/Black Sea/$season_cineca2 - 10-years running averages/$var_old.4Danl.nc" $datapath/$region/$season
cp $datapath/$region/$season/$var_old.4Danl.nc $datapath/$region/$season/$var.4Danl.nc
ncrename -v "Water body chlorophyll-a",$var $datapath/$region/$season/$var.4Danl.nc
ncrename -v "Water body chlorophyll-a_L2",${var}_L2 $datapath/$region/$season/$var.4Danl.nc

### for dissolved oxygen ###
#ncrename -v "${var_old}",$var $datapath/$region/$season/$var.4Danl.nc
#ncrename -v "${var_old}_L2",${var}_L2 $datapath/$region/$season/$var.4Danl.nc

fi

if [ $i == "5" ] 
then 
region="mediterranean"
rm -f $region/$season/*
#mkdir -p $region/$season
mkdir -p $datapath/$region/$season
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Mediterranean\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var'.4Danl.nc" $region/$season
#cp "/data/emodnet-domains/Mediterranean Sea/$season_cineca1 - 10-years running averages/$var.4Danl.nc" $datapath/$region/$season

### for chlorophyll-a ###
#scp "uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-domains/Atlantic\ Sea/''$season_cineca1''\ \-\ 10-years\ running\ averages/'$var_old'.4Danl.nc" $region/$season
cp "/data/emodnet-domains/Mediterranean Sea/$season_cineca1 - 10-years running averages/$var_old.4Danl.nc" $datapath/$region/$season
cp $datapath/$region/$season/$var_old.4Danl.nc $datapath/$region/$season/$var.4Danl.nc
ncrename -v $var_old,$var $datapath/$region/$season/$var.4Danl.nc
ncrename -v ${var_old}_L2,${var}_L2 $datapath/$region/$season/$var.4Danl.nc

fi

kmax=$(ncdump -h $datapath/$region/$season/$var.4Danl.nc | grep -i "depth =" | awk '{print $3}')
kmaxnew=30
lmax=184 #1965-2010, 4 seasons

echo '
cancel data/all
cancel axis/all
cancel mode upcase_output

set memory/size=2100

use "'$datapath'/'$region'/'$season'/'$var'.4Danl.nc"

!define axis/t="1-JAN-1950":"1-JAN-2016":1/calendar=360_DAY/UNIT=month time1
!define grid/like='$var'/t=time1 gg1

let start_year = 1965
let nyears = 46
!water_body_ammonium : 1965-2010
let indices = L[L=1:`nyears*12`]
let month = mod(indices-1,12)+1
let year = start_year + int((indices-1)/12)
define axis/units=days/T0=1-jan-1900/edges/from_data time1 = DAYS1900(year,month,1)

!SHOW AXIS/T=1-jan-1958:1-jan-1959 time1

define grid/like='$var'/t=time1 gg1

let test='$var'_L2[G=gg1@nrst]

def att/output test.long_name = '${var}'_L2.long_name
!set att/like='$var'_L2/output test
!show attribute/all test

let indices2 = L[L=1:`nyears`]
if `'$j' EQ 1` then let month2 = indices2*0+2
if `'$j' EQ 2` then let month2 = indices2*0+5
if `'$j' EQ 3` then let month2 = indices2*0+8
if `'$j' EQ 4` then let month2 = indices2*0+11
let year2 = start_year + int(indices2)
define axis/units=days/T0=1-jan-1900 time2 = DAYS1900(year2,month2,16)

define grid/like='$var'/t=time2 gg2

let test_tmp=test[G=gg2@nrst]

!define axis/t="1-OCT-1950":"1-OCT-2016":12/calendar=360_DAY/UNIT=month time2
!define grid/like='$var'_L2/t=time2 gg2

let indices3 = L[L=1:`nyears*4`]
let month3_tmp = mod(indices3-1,4)+1
let month3 = month3_tmp*3-1
let year3 = start_year + int((indices3-1)/4)
define axis/units=days/T0=1-jan-1900 time3 = DAYS1900(year3,month3,16)

define axis/units=meters/Z depthnew={0, 5, 10, 20, 30, 40, 50, 75, 100, 125, 150, 200, 250, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1750, 2000, 2500, 3000}

!SHOW AXIS/T=1-jan-1958:1-jan-1959 time3

define grid/like='$var'/z=depthnew/t=time3 gg3

! 3 regridding (1 small, 1 coarse, 1 medium) to avoid interpolation problems

let '${var}'_enlarged=test_tmp[G=gg3@xact]

def att/output '${var}'_enlarged.long_name  = test.long_name
!set att/like=test/output '${var}'_enlarged
!show attribute/all '${var}'_enlarged

!show attribute .
!set att/output ..title
!def att/output ..comment = "test"

!list/x=-3.8/y=43.7/l=275 test !'${var}'_enlarged 
!list/x=-3.8/y=43.7/l=22 test_tmp
!list/x=-3.8/y=43.7/l=92/k=2 '${var}'_enlarged

save/clobber/l=1/file="'$datapath'/'$region'/'$season'/'$var'.4Danl.enlarged.nc" '${var}'_enlarged
repeat/l=2:`nyears*4` save/append/file="'$datapath'/'$region'/'$season'/'$var'.4Danl.enlarged.nc" '${var}'_enlarged

' > enlargetime.jnl

ferret -script enlargetime.jnl

done

#sleep 100

echo '
gridtype = lonlat
gridsize = 408500
xname = lon
xlongname = longitude
xunits = degrees east
yname = lat
ylongname = latitude
yunits = degrees north
xsize = 950
ysize = 430
xfirst = -40.0
xinc = 0.1
yfirst = 24.0
yinc = 0.1
' > grid.txt

mkdir -p $datapath/combined

region="mediterranean"

echo '
cancel data/all
cancel axis/all
cancel mode upcase_output 

!set memory/size=400
set memory/size=200

use "'$datapath'/'$region'/'$season'/'$var'.4Danl.enlarged.nc"

let '${var}'='${var}'_enlarged/0

def att/output '$var'.long_name = '${var}'_enlarged.long_name

!save/clobber/file="'$datapath'/nan.nc" '${var}'
save/l=1/clobber/file="'$datapath'/nan.nc" '${var}'
repeat/l=2:'$lmax' save/append/file="'$datapath'/nan.nc" '${var}'  
' > nan.jnl

ferret -script nan.jnl

cdo enlarge,grid.txt $datapath/nan.nc $datapath'/combined/'$var'.'$season'.combined.0.nc'

region="atlantic"
cdo mergegrid $datapath'/combined/'$var'.'$season'.combined.0.nc' $datapath'/'$region'/'$season'/'$var'.4Danl.enlarged.nc' $datapath'/combined/'$var'.'$season'.combined.1.nc'

region="north"
cdo mergegrid $datapath'/combined/'$var'.'$season'.combined.1.nc' $datapath/$region'/'$season'/'$var'.4Danl.enlarged.nc' $datapath'/combined/'$var'.'$season'.combined.2.nc'

region="baltic"
cdo mergegrid $datapath'/combined/'$var'.'$season'.combined.2.nc' $datapath/$region'/'$season'/'$var'.4Danl.enlarged.nc' $datapath'/combined/'$var'.'$season'.combined.3.nc'

region="black"
cdo mergegrid $datapath'/combined/'$var'.'$season'.combined.3.nc' $datapath/$region'/'$season'/'$var'.4Danl.enlarged.nc' $datapath'/combined/'$var'.'$season'.combined.4.nc'

region="mediterranean"
cdo remapbil,grid.txt $datapath/$region'/'$season'/'$var'.4Danl.enlarged.nc' $datapath/$region'/'$season'/'$var'.4Danl.enlarged.regridded.nc'
cdo mergegrid $datapath'/combined/'$var'.'$season'.combined.4.nc' $datapath/$region'/'$season'/'$var'.4Danl.enlarged.regridded.nc' $datapath'/combined/'$var'.'$season'.combined.5.nc'

echo '
cancel data/all
cancel axis/all
cancel mode upcase_output 

set memory/size=600

use "'$datapath'/combined/'$var'.'$season'.combined.5.nc"

let mask=if '$var' then 0 else 1
let mask2=if '$var' then 1

let test = fill_xy('$var', mask, 40)
let test2 = test[i=@sbx:40,j=@sbx:40]
let test3 = test2*mask2

let test4 = test[i=@sbx:20,j=@sbx:20]
let test5 = test4*mask2

let yy = y[gy='$var']
let xx = x[gx='$var']

let '$var'_L2 = if (xx ge -7 and xx le -3 and yy ge 46 and yy le 50) or (xx ge -8 and xx le -4 and yy ge 34 and yy le 38) then test5 else '$var'    !Britany & Gibraltar
!let '$var'_L2 = if (xx ge -8 and xx le -4 and yy ge 34 and yy le 38) then test5 else '$var'
!let '$var'[x=6W:4W,y=47N:49N] = test3[x=6W:4W,y=47N:49N]

!save/clobber/file="./combined/test.nc" test3
!save/append/file="./combined/test.nc" test5
!save/append/file="./combined/test.nc" test3
!save/append/file="./combined/test.nc" mask

def att/output '$var'_L2.long_name = '$var'.long_name

save/l=1/clobber/bounds/title="DIVA 4D analysis of '$var'"/file="'$datapath'/combined/'$var'.'$season'.combined.nc" '$var'_L2
repeat/l=2:'$lmax' save/append/bounds/title="DIVA 4D analysis of '$var'"/file="'$datapath'/combined/'$var'.'$season'.combined.nc" '$var'_L2  

' > smooth.jnl

ferret -script smooth.jnl

if [[ -f $datapath/combined/$var.winter.combined.nc && -f $datapath/combined/$var.spring.combined.nc ]] 
then
if [[ -f $datapath/combined/$var.summer.combined.nc && -f $datapath/combined/$var.autumn.combined.nc ]]
then
cdo mergegrid $datapath'/combined/'$var'.winter.combined.nc' $datapath'/combined/'$var'.spring.combined.nc' $datapath'/combined/'$var'.winterspring.combined.nc'
cdo mergegrid $datapath'/combined/'$var'.winterspring.combined.nc' $datapath'/combined/'$var'.summer.combined.nc' $datapath'/combined/'$var'.winterspringsummer.combined.nc'
cdo mergegrid $datapath'/combined/'$var'.winterspringsummer.combined.nc' $datapath'/combined/'$var'.autumn.combined.nc' $datapath'/combined/'$var'.combined.nc' 

ncrename -d time3,time $datapath/combined/$var.combined.nc 
ncrename -v time3,time $datapath/combined/$var.combined.nc 
ncrename -v time3_bnds,climatology_bounds $datapath/combined/$var.combined.nc
#ncrename -d bnds,nv $datapath/combined/$var.combined.nc 
ncrename -d nb2,nv $datapath/combined/$var.combined.nc
#ncrename -d DEPTH1_1,depth $datapath/combined/$var.combined.nc
#ncrename -v DEPTH1_1,depth $datapath/combined/$var.combined.nc 
ncrename -d depthnew,depth $datapath/combined/$var.combined.nc
ncrename -v depthnew,depth $datapath/combined/$var.combined.nc 
#ncrename -v ${varcapital}_L2,${var}_L2 $datapath/combined/$var.combined.nc
ncatted -O -a units,time,o,c,"days since 1900-01-01 00:00:00" $datapath/combined/$var.combined.nc
ncatted -O -a units,depth,o,c,"meters" $datapath/combined/$var.combined.nc
ncatted -O -a long_name_mod,${var}_L2,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a history,${var}_L2,d,c, $datapath/combined/$var.combined.nc

ncatted -a _FillValue,,o,f,NaN $datapath/combined/$var.combined.nc 
ncatted -a _FillValue,,m,f,-1.e+34 $datapath/combined/$var.combined.nc

ncatted -a climatology,time,a,c,'climatology_bounds' $datapath/combined/$var.combined.nc

#ncks -x -v depthnew_bnds $datapath/combined/$var.combined.nc tmp.nc
#mv tmp.nc $datapath/combined/$var.combined.nc

ncatted -O -a _FillValue,time,d,c, $datapath/combined/$var.combined.nc 
ncatted -O -a _FillValue,climatology_bounds,d,c, $datapath/combined/$var.combined.nc 
ncatted -O -a _FillValue,depth,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a _FillValue,lon,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a _FillValue,lat,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a _FillValue,lon_bnds,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a _FillValue,lat_bnds,d,c, $datapath/combined/$var.combined.nc
ncatted -O -a _FillValue,depthnew_bnds,d,c, $datapath/combined/$var.combined.nc

### actual range

rm $datapath/combined/range.txt
touch $datapath/combined/range.txt

echo '

use "'$datapath'/combined/'$var'.combined.nc"

list/nohead/append/file="'$datapath'/combined/range.txt" '$var'_L2[i=@max,j=@max,k=1:15@max,l=@max]
list/nohead/append/file="'$datapath'/combined/range.txt" '$var'_L2[i=@max,j=@max,k=16:30@max,l=@max]
list/nohead/append/file="'$datapath'/combined/range.txt" '$var'_L2[i=@min,j=@min,k=1:15@min,l=@min]
list/nohead/append/file="'$datapath'/combined/range.txt" '$var'_L2[i=@min,j=@min,k=16:30@min,l=@min]

' > actualrange.jnl

ferret -script actualrange.jnl

{
read a
read b
read c
read d
} < $datapath/combined/range.txt

if [ $(echo "$a>$b" | bc -l)=="1" ] 
then
maximum=$a
else
maximum=$b
fi

if [ $(echo "$c<$d" | bc -l)=="1" ] 
then
minimum=$c
else
minimum=$d
fi

#echo $minimum,$maximum
ncatted -O -a actual_range,${var}_L2,o,c,"$minimum,$maximum" $datapath/combined/$var.combined.nc

###

ncatted -h -a history,global,d,c, $datapath/combined/$var.combined.nc

nccopy -d 4  -c time/1,depth/1 $datapath'/combined/'$var'.combined.nc' $datapath'/combined/'$var'.combined.compressed.nc'

#scp 'combined/'$var'.combined.nc' 'uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-combined'

### for chlorophyll-a ###
#cp ./combined/$var.combined.nc ./combined/$var_old.combined.nc
#ncrename -v ${var}_L2,${var_old}_L2 ./combined/$var_old.combined.nc
#scp 'combined/'$var_old'.combined.nc' 'uniliege01@ogs01.cineca.it:/production/apache/data/emodnet-combined'

#rm -rf 'combined'

fi
fi










